<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--配置和业务逻辑有关的-->
    <!--数据源，事务控制，-->

    <!--引入数据库连接配置文件-->

    <context:property-placeholder location="classpath:dbConfig.properties"/>

    <!--配置数据源-->
    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="c3p0dataSource" name="c3p0dataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.diverClass}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="user" value="${jdbc.user}"></property>
    </bean>

    <!--开启包扫描-->
    <context:component-scan base-package="cn.edu.nyist">
        <!--除了Controller不扫描，其余的全扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置mybatis整合的sqlSessionFactory-->
    <bean id="SqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">

        <!--指定Mapper配置文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!--配置数据源-->
        <property name="dataSource" ref="c3p0dataSource"/>
        <!--指定mybatis全局配置文件的位置-->
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>

    <!--批量操作-->
    <bean class="org.mybatis.spring.SqlSessionTemplate" id="session">
        <constructor-arg name="executorType" value="BATCH"/>
        <constructor-arg ref="SqlSessionFactoryBean"/>
    </bean>

    <!--将mybatis接口实现加入到IOC容器中-->
    <bean id="MapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有的dao接口交给IOC容器管理-->
        <property name="basePackage" value="cn.edu.nyist.dao"/>
    </bean>

    <!--事务控制对象-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="c3p0dataSource"></property>
    </bean>

    <!--开启基于注解的事务，xml配置的事务  （主要使用xml配置事务管理)-->
    <aop:config>
        <aop:pointcut id="txPoint" expression="execution( * cn.edu.nyist.service..*(..))"></aop:pointcut>

        <!--事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>


    <!--配置事务增强如何切入事物-->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!-- * 代表所有的方法都是事务方法-->
            <tx:method name="*"/>
            <!--以get开头的方法，设置为只读，提高查询性能，减少数据库压力-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <mvc:default-servlet-handler/>
</beans>